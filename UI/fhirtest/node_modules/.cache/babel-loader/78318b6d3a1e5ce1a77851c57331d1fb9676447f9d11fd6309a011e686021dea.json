{"ast":null,"code":"var _jsxFileName = \"C:\\\\temp\\\\rodneytest\\\\fhirtest\\\\src\\\\component\\\\UploadImageToS3WithNativeSdk.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AWS from 'aws-sdk';\nimport { SecretsManagerClient, GetSecretValueCommand } from \"@aws-sdk/client-secrets-manager\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET = 'fhir-cracker-file-upload';\nconst REGION = 'us-east-1';\nconst UploadImageToS3WithNativeSdk = () => {\n  _s();\n  const [progress, setProgress] = useState(0);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [accessKey, setAccessKey] = useState(null);\n  const [secretKey, setSecretKey] = useState(null);\n  const handleFileInput = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleSecretKey = e => {\n    setSecretKey(e.target.value);\n  };\n  const handleAccessKey = e => {\n    setAccessKey(e.target.value);\n  };\n  const uploadFile = file => {\n    AWS.config.update({\n      accessKeyId: accessKey,\n      secretAccessKey: secretKey\n    });\n    const myBucket = new AWS.S3({\n      params: {\n        Bucket: S3_BUCKET\n      },\n      region: REGION\n    });\n    const params = {\n      ACL: 'public-read',\n      Body: file,\n      Bucket: S3_BUCKET,\n      Key: file.name\n    };\n    myBucket.putObject(params).on('httpUploadProgress', evt => {\n      setProgress(Math.round(evt.loaded / evt.total * 100));\n    }).send(err => {\n      if (err) console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Secured Native SDK File Upload Progress is \", progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"accessKey\",\n        title: \"Enter AWS Access Key\",\n        onChange: handleAccessKey,\n        children: \"Enter AWS Access Key: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"secretKey\",\n        title: \"Enter AWS Secret Key\",\n        onChange: handleSecretKey,\n        children: \"Enter AWS Secret Key: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => uploadFile(selectedFile),\n        children: \" Upload to S3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n};\n_s(UploadImageToS3WithNativeSdk, \"r77VA+z7+YmFF+9++oovPnlCuAU=\");\n_c = UploadImageToS3WithNativeSdk;\nexport default UploadImageToS3WithNativeSdk;\nvar _c;\n$RefreshReg$(_c, \"UploadImageToS3WithNativeSdk\");","map":{"version":3,"names":["React","useState","AWS","SecretsManagerClient","GetSecretValueCommand","jsxDEV","_jsxDEV","S3_BUCKET","REGION","UploadImageToS3WithNativeSdk","_s","progress","setProgress","selectedFile","setSelectedFile","accessKey","setAccessKey","secretKey","setSecretKey","handleFileInput","e","target","files","handleSecretKey","value","handleAccessKey","uploadFile","file","config","update","accessKeyId","secretAccessKey","myBucket","S3","params","Bucket","region","ACL","Body","Key","name","putObject","on","evt","Math","round","loaded","total","send","err","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","title","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/temp/rodneytest/fhirtest/src/component/UploadImageToS3WithNativeSdk.js"],"sourcesContent":["import React ,{useState} from 'react';\nimport AWS from 'aws-sdk'\nimport {\n    SecretsManagerClient,\n    GetSecretValueCommand,\n} from \"@aws-sdk/client-secrets-manager\";\n\nconst S3_BUCKET ='fhir-cracker-file-upload';\nconst REGION ='us-east-1';\n\n\nconst UploadImageToS3WithNativeSdk = () => {\n\n    const [progress , setProgress] = useState(0);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [accessKey, setAccessKey] = useState(null);\n    const [secretKey, setSecretKey] = useState(null);\n\n    const handleFileInput = (e) => {\n        setSelectedFile(e.target.files[0]);\n    }\n\n    const handleSecretKey = (e) => {\n        setSecretKey(e.target.value);\n    }\n\n    const handleAccessKey = (e) => {\n        setAccessKey(e.target.value);\n    }\n    const uploadFile = (file) => {\n\n        AWS.config.update({\n            accessKeyId: accessKey,\n            secretAccessKey: secretKey\n        })\n\n        const myBucket = new AWS.S3({\n            params: { Bucket: S3_BUCKET},\n            region: REGION,\n        })\n        const params = {\n            ACL: 'public-read',\n            Body: file,\n            Bucket: S3_BUCKET,\n            Key: file.name\n        };\n\n        myBucket.putObject(params)\n            .on('httpUploadProgress', (evt) => {\n                setProgress(Math.round((evt.loaded / evt.total) * 100))\n            })\n            .send((err) => {\n                if (err) console.log(err)\n            })\n    }\n\n\n    return <div>\n        <div>Secured Native SDK File Upload Progress is {progress}%</div>\n        <div>\n            <input type=\"text\" id=\"accessKey\" title=\"Enter AWS Access Key\" onChange={handleAccessKey}>Enter AWS Access Key: </input>\n            <input type=\"text\" id=\"secretKey\" title=\"Enter AWS Secret Key\" onChange={handleSecretKey}>Enter AWS Secret Key: </input>\n        </div>\n        <div><input type=\"file\" onChange={handleFileInput}/></div>\n        <div><button onClick={() => uploadFile(selectedFile)}> Upload to S3</button></div>\n    </div>\n}\n\nexport default UploadImageToS3WithNativeSdk;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}