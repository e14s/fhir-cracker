{"ast":null,"code":"var _jsxFileName = \"C:\\\\temp\\\\rodneytest\\\\fhirtest\\\\src\\\\component\\\\UploadImageToS3WithReactS3.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadFile } from 'react-s3';\nimport { Buffer } from \"buffer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nBuffer.from(\"anything\", \"base64\");\nwindow.Buffer = window.Buffer || require(\"buffer\").Buffer;\nconst S3_BUCKET = 'fhir-cracker-file-upload';\nconst REGION = 'us-east-1';\nconst ACCESS_KEY = 'AKIAQZDWVACCQJSAGSVG';\nconst SECRET_ACCESS_KEY = '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';\nconst config = {\n  bucketName: S3_BUCKET,\n  region: REGION,\n  accessKeyId: ACCESS_KEY,\n  secretAccessKey: SECRET_ACCESS_KEY\n};\nconst UploadImageToS3WithReactS3 = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileInput = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = async file => {\n    uploadFile(file, config).then(data => console.log(data)).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"React S3 File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleUpload(selectedFile),\n      children: \" Upload to S3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n};\n_s(UploadImageToS3WithReactS3, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = UploadImageToS3WithReactS3;\nexport default UploadImageToS3WithReactS3;\nvar _c;\n$RefreshReg$(_c, \"UploadImageToS3WithReactS3\");","map":{"version":3,"names":["React","useState","uploadFile","Buffer","jsxDEV","_jsxDEV","from","window","require","S3_BUCKET","REGION","ACCESS_KEY","SECRET_ACCESS_KEY","config","bucketName","region","accessKeyId","secretAccessKey","UploadImageToS3WithReactS3","_s","selectedFile","setSelectedFile","handleFileInput","e","target","files","handleUpload","file","then","data","console","log","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/temp/rodneytest/fhirtest/src/component/UploadImageToS3WithReactS3.js"],"sourcesContent":["import React , {useState} from 'react';\nimport { uploadFile } from 'react-s3';\nimport { Buffer } from \"buffer\";\n\n\nBuffer.from(\"anything\", \"base64\");\nwindow.Buffer = window.Buffer || require(\"buffer\").Buffer;\n\nconst S3_BUCKET ='fhir-cracker-file-upload';\nconst REGION ='us-east-1';\nconst ACCESS_KEY ='AKIAQZDWVACCQJSAGSVG';\nconst SECRET_ACCESS_KEY ='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';\n\nconst config = {\n    bucketName: S3_BUCKET,\n    region: REGION,\n    accessKeyId: ACCESS_KEY,\n    secretAccessKey: SECRET_ACCESS_KEY,\n}\n\nconst UploadImageToS3WithReactS3 = () => {\n\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    const handleFileInput = (e) => {\n        setSelectedFile(e.target.files[0]);\n    }\n\n    const handleUpload = async (file) => {\n        uploadFile(file, config)\n            .then(data => console.log(data))\n            .catch(err => console.error(err))\n    }\n\n    return <div>\n        <div>React S3 File Upload</div>\n        <input type=\"file\" onChange={handleFileInput}/>\n        <button onClick={() => handleUpload(selectedFile)}> Upload to S3</button>\n    </div>\n}\n\nexport default UploadImageToS3WithReactS3;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,SAASC,UAAU,QAAQ,UAAU;AACrC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhCF,MAAM,CAACG,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC;AACjCC,MAAM,CAACJ,MAAM,GAAGI,MAAM,CAACJ,MAAM,IAAIK,OAAO,CAAC,QAAQ,CAAC,CAACL,MAAM;AAEzD,MAAMM,SAAS,GAAE,0BAA0B;AAC3C,MAAMC,MAAM,GAAE,WAAW;AACzB,MAAMC,UAAU,GAAE,sBAAsB;AACxC,MAAMC,iBAAiB,GAAE,0CAA0C;AAEnE,MAAMC,MAAM,GAAG;EACXC,UAAU,EAAEL,SAAS;EACrBM,MAAM,EAAEL,MAAM;EACdM,WAAW,EAAEL,UAAU;EACvBM,eAAe,EAAEL;AACrB,CAAC;AAED,MAAMM,0BAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMqB,eAAe,GAAIC,CAAC,IAAK;IAC3BF,eAAe,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;IACjCzB,UAAU,CAACyB,IAAI,EAAEd,MAAM,CAAC,CACnBe,IAAI,CAACC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAACC,GAAG,IAAIH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC,CAAC;EACzC,CAAC;EAED,oBAAO5B,OAAA;IAAA8B,QAAA,gBACH9B,OAAA;MAAA8B,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAC/BlC,OAAA;MAAOmC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEnB;IAAgB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC/ClC,OAAA;MAAQqC,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAACN,YAAY,CAAE;MAAAe,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvE;AACV,CAAC;AAAApB,EAAA,CAnBKD,0BAA0B;AAAAyB,EAAA,GAA1BzB,0BAA0B;AAqBhC,eAAeA,0BAA0B;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}