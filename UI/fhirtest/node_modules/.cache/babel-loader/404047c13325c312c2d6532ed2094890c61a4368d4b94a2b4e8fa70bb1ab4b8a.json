{"ast":null,"code":"import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_ListSecretsCommand, se_ListSecretsCommand } from \"../protocols/Aws_json1_1\";\nexport class ListSecretsCommand extends $Command {\n  static getEndpointParameterInstructions() {\n    return {\n      UseFIPS: {\n        type: \"builtInParams\",\n        name: \"useFipsEndpoint\"\n      },\n      Endpoint: {\n        type: \"builtInParams\",\n        name: \"endpoint\"\n      },\n      Region: {\n        type: \"builtInParams\",\n        name: \"region\"\n      },\n      UseDualStack: {\n        type: \"builtInParams\",\n        name: \"useDualstackEndpoint\"\n      }\n    };\n  }\n  constructor(input) {\n    super();\n    this.input = input;\n  }\n  resolveMiddleware(clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getEndpointPlugin(configuration, ListSecretsCommand.getEndpointParameterInstructions()));\n    const stack = clientStack.concat(this.middlewareStack);\n    const {\n      logger\n    } = configuration;\n    const clientName = \"SecretsManagerClient\";\n    const commandName = \"ListSecretsCommand\";\n    const handlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: _ => _,\n      outputFilterSensitiveLog: _ => _\n    };\n    const {\n      requestHandler\n    } = configuration;\n    return stack.resolve(request => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n  }\n  serialize(input, context) {\n    return se_ListSecretsCommand(input, context);\n  }\n  deserialize(output, context) {\n    return de_ListSecretsCommand(output, context);\n  }\n}","map":{"version":3,"names":["getEndpointPlugin","getSerdePlugin","Command","$Command","de_ListSecretsCommand","se_ListSecretsCommand","ListSecretsCommand","getEndpointParameterInstructions","UseFIPS","type","name","Endpoint","Region","UseDualStack","constructor","input","resolveMiddleware","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","logger","clientName","commandName","handlerExecutionContext","inputFilterSensitiveLog","_","outputFilterSensitiveLog","requestHandler","resolve","request","handle","context","output"],"sources":["C:/temp/rodneytest/fhirtest/node_modules/@aws-sdk/client-secrets-manager/dist-es/commands/ListSecretsCommand.js"],"sourcesContent":["import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_ListSecretsCommand, se_ListSecretsCommand } from \"../protocols/Aws_json1_1\";\nexport class ListSecretsCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListSecretsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SecretsManagerClient\";\n        const commandName = \"ListSecretsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_ListSecretsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_ListSecretsCommand(output, context);\n    }\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,8BAA8B;AAChE,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,OAAO,IAAIC,QAAQ,QAAQ,wBAAwB;AAC5D,SAASC,qBAAqB,EAAEC,qBAAqB,QAAQ,0BAA0B;AACvF,OAAO,MAAMC,kBAAkB,SAASH,QAAQ,CAAC;EAC7C,OAAOI,gCAAgCA,CAAA,EAAG;IACtC,OAAO;MACHC,OAAO,EAAE;QAAEC,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAkB,CAAC;MAC3DC,QAAQ,EAAE;QAAEF,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAW,CAAC;MACrDE,MAAM,EAAE;QAAEH,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAS,CAAC;MACjDG,YAAY,EAAE;QAAEJ,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAuB;IACxE,CAAC;EACL;EACAI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,EAAE;IACP,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EACAC,iBAAiBA,CAACC,WAAW,EAAEC,aAAa,EAAEC,OAAO,EAAE;IACnD,IAAI,CAACC,eAAe,CAACC,GAAG,CAACpB,cAAc,CAACiB,aAAa,EAAE,IAAI,CAACI,SAAS,EAAE,IAAI,CAACC,WAAW,CAAC,CAAC;IACzF,IAAI,CAACH,eAAe,CAACC,GAAG,CAACrB,iBAAiB,CAACkB,aAAa,EAAEZ,kBAAkB,CAACC,gCAAgC,EAAE,CAAC,CAAC;IACjH,MAAMiB,KAAK,GAAGP,WAAW,CAACQ,MAAM,CAAC,IAAI,CAACL,eAAe,CAAC;IACtD,MAAM;MAAEM;IAAO,CAAC,GAAGR,aAAa;IAChC,MAAMS,UAAU,GAAG,sBAAsB;IACzC,MAAMC,WAAW,GAAG,oBAAoB;IACxC,MAAMC,uBAAuB,GAAG;MAC5BH,MAAM;MACNC,UAAU;MACVC,WAAW;MACXE,uBAAuB,EAAGC,CAAC,IAAKA,CAAC;MACjCC,wBAAwB,EAAGD,CAAC,IAAKA;IACrC,CAAC;IACD,MAAM;MAAEE;IAAe,CAAC,GAAGf,aAAa;IACxC,OAAOM,KAAK,CAACU,OAAO,CAAEC,OAAO,IAAKF,cAAc,CAACG,MAAM,CAACD,OAAO,CAACA,OAAO,EAAEhB,OAAO,IAAI,CAAC,CAAC,CAAC,EAAEU,uBAAuB,CAAC;EACrH;EACAP,SAASA,CAACP,KAAK,EAAEsB,OAAO,EAAE;IACtB,OAAOhC,qBAAqB,CAACU,KAAK,EAAEsB,OAAO,CAAC;EAChD;EACAd,WAAWA,CAACe,MAAM,EAAED,OAAO,EAAE;IACzB,OAAOjC,qBAAqB,CAACkC,MAAM,EAAED,OAAO,CAAC;EACjD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}